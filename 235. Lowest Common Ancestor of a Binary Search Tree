/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

class Solution {
private:
    TreeNode* DFS(TreeNode* root, TreeNode* p, TreeNode* q) {
        int parentVal = root->val, pVal = p->val, qVal = q->val;
        
        // both p and q are larger than root
        if(pVal > parentVal && qVal > parentVal) 
            return (DFS(root->right, p, q));
        
        //both p and q are smaller than root
        else if(pVal < parentVal && qVal < parentVal) 
            return (DFS(root->left, p, q));
        
        // LCA found
        else 
            return root;
    } 
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        return DFS(root, p, q);
    }
};
