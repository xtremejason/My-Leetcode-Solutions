/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void DFS(TreeNode* root, int maxValueSeen, int &goodNodes) {
        if(root == nullptr) return;
        
        if(root->val >= maxValueSeen) goodNodes += 1; // update # goodNodes
        
        // DFS left and right
        DFS(root->left, max(root->val, maxValueSeen), goodNodes);
        DFS(root->right, max(root->val, maxValueSeen), goodNodes);
    }
public:
    int goodNodes(TreeNode* root) {
        int goodNodes = 0;
        DFS(root, root->val, goodNodes);
        return goodNodes;
    }
};
