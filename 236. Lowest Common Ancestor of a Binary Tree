/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
private:
    TreeNode* DFS(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root == nullptr || root == p || root == q) return root;
        
        TreeNode* left = DFS(root->left, p, q);
        TreeNode* right = DFS(root->right, p, q);
        
        if(left == nullptr && right == nullptr) return nullptr; // No answer
        if(left != nullptr && right != nullptr) return root;  // LCA found
        
        // both answers exist in one side of tree
        return left == nullptr ? right : left;
        
    }
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        return DFS(root, p, q);
    }
};
