/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool DFS(TreeNode* root, unordered_map<int,int>& Map, int k){
        if(root == NULL)
            return false;
        if(Map.count(k - root->val))
            return true;
        Map[root->val]++;
        
        return DFS(root->left, Map, k) || DFS(root->right, Map, k);    
    }
    
    bool findTarget(TreeNode* root, int k) {
        //save values into Map
        unordered_map<int,int> Map;
        return DFS(root, Map, k);
    }
};
